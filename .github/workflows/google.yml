# This workflow will build a docker container, publish it to Google Container Registry, and deploy it to GKE when a release is created
#
# To configure this workflow:
#
# 1. Ensure that your repository contains the necessary configuration for your Google Kubernetes Engine cluster, including deployment.yml, kustomization.yml, service.yml, etc.
#
# 2. Set up secrets in your workspace: GKE_PROJECT with the name of the project and GKE_SA_KEY with the Base64 encoded JSON service account key (https://github.com/GoogleCloudPlatform/github-actions/tree/docs/service-account-key/setup-gcloud#inputs).
#
# 3. Change the values for the GKE_ZONE, GKE_CLUSTER, IMAGE, and DEPLOYMENT_NAME environment variables (below).
#
# For more support on how to run the workflow, please visit https://github.com/google-github-actions/setup-gcloud/tree/master/example-workflows/gke

name: Build and Deploy to GKE

on:
  push:
    tags:
      - 202*

# Environment variables available to all jobs and steps in this workflow
env:
  GITHUB_SHA: ${{ github.sha }}
  GKE_PROJECT: retailx-mdlink-dev
  REGISTRY_HOSTNAME: gcr.io
  IMAGE: common-planocycle-api
  GITHUB_TAG: ${{ github.ref }}
jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@v0
        with:
          version: '270.0.0'
          service_account_key: ${{ secrets.MDLINK_GKE_SA_KEY }}

      # Configure docker to use the gcloud command-line tool as a credential helper
      - run: |
          # Set up docker to authenticate
          # via gcloud command-line tool.
          gcloud auth configure-docker

      # Fetch tag & Build  & push
      - name: Fetch the latest tag and Build and Push the image to Google Container Registry
        run: |
          export LATEST_TAG=`echo ${GITHUB_TAG}|sed 's/refs\/tags\///g'`

          sed -i 's/dockerhub.tre/gcr.io/g' ./src/Dockerfile

          docker build -t "$REGISTRY_HOSTNAME"/$GKE_PROJECT/$IMAGE:"$LATEST_TAG" \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF" ./src

          docker push $REGISTRY_HOSTNAME/$GKE_PROJECT/$IMAGE:$LATEST_TAG
