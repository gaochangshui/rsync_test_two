<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.trechina.planocycle.mapper.PriorityAllPtsMapper">
    <insert id="insertWorkPtsData">
        insert into planocycle.work_priority_all_pts_data(id,company_cd,file_name,authorcd,shelf_pattern_cd,valid_flg,
        start_day,edit_time,create_time,editer_cd,priority_order_cd)
        select id,company_cd,file_name,#{authorCd},shelf_pattern_cd,valid_flg,
        start_day,edit_time,create_time,editer_cd,priority_order_cd
        from planocycle.priority_order_pts_data
        where company_cd = #{companyCd} and priority_order_cd = #{priorityOrderCd}
    </insert>
    <select id="selectWorkPtsCdByAuthorCd" resultType="com.trechina.planocycle.entity.po.ShelfPtsData">
        select id,file_name from planocycle.work_priority_all_pts_data where company_cd=#{companyCd}
        and priority_all_cd=#{priorityAllCd}
        and authorcd=#{authorCd} and shelf_pattern_cd=#{patternCd} and deleteflg=0
    </select>
    <delete id="deletePtsTaimst">
        delete from planocycle.work_priority_all_pts_data_tai where pts_cd=#{ptsCd}
    </delete>
    <delete id="deletePtsTanamst">
        delete from planocycle.work_priority_all_pts_data_tana where pts_cd=#{ptsCd}
    </delete>
    <delete id="deletePtsVersion">
        delete from planocycle.work_priority_all_pts_data_version where pts_cd=#{ptsCd}
    </delete>
    <delete id="deletePtsData">
        delete from planocycle.work_priority_all_pts_data where id=#{ptsCd}
    </delete>
    <delete id="deletePtsDataJandata">
        delete from planocycle.work_priority_order_pts_data_jans where pts_cd=#{ptsCd}
    </delete>
    <insert id="insertPtsData" parameterType="com.trechina.planocycle.entity.dto.PriorityOrderPtsDataDto">
        <selectKey keyProperty="id" resultType="int" order="BEFORE">
            select nextval('planocycle.priority_all_pts_data_id_seq'::regclass) as id
        </selectKey>
        insert into planocycle.work_priority_all_pts_data(id,company_cd,file_name,authorcd,shelf_pattern_cd,valid_flg,
        start_day,edit_time,create_time,editer_cd,priority_all_cd)
        select #{id},company_cd,#{fileName},#{authorCd},shelf_pattern_cd,valid_flg,start_day,now(),now(),#{authorCd}, #{priorityAllCd}
        from planocycle.shelf_pts_data
        where id=#{oldPtsCd} and deleteflg=0
    </insert>
    <insert id="insertPtsTaimst">
        insert into planocycle.work_priority_all_pts_data_tai(company_cd,pts_cd,tai_cd,tai_height,tai_width,tai_depth,tai_name,edit_time,
        create_time,editer_cd,author_cd)
        select company_cd,#{id},tai_cd,tai_height,tai_width,tai_depth,tai_name,now(),now(),#{authorCd},#{authorCd}
        from planocycle.shelf_pts_data_taimst
        where pts_cd=#{ptsCd} and deleteflg=0
    </insert>
    <insert id="insertPtsTanamst">
        insert into planocycle.work_priority_all_pts_data_tana(company_cd,
        pts_cd, tai_cd, tana_cd, tana_height, tana_width, tana_depth, tana_thickness, tana_type,edit_time,
        create_time,editer_cd,author_cd)
        select company_cd,#{id},tai_cd, tana_cd, tana_height, tana_width, tana_depth, tana_thickness, tana_type,
        now(),now(),#{authorCd},#{authorCd}
        from planocycle.shelf_pts_data_tanamst
        where pts_cd=#{ptsCd} and deleteflg=0
    </insert>
    <insert id="insertPtsVersion">
        insert into planocycle.work_priority_all_pts_data_version(company_cd,
        pts_cd, commoninfo,versioninfo,outflg,modename,tai_header,tana_header,
        jan_header,edit_time,create_time,editer_cd,author_cd)
        select company_cd, #{id}, commoninfo,versioninfo,outflg,modename,tai_header,tana_header,jan_header,
        now(),now(),#{authorCd},#{authorCd}
        from planocycle.shelf_pts_data_version
        where pts_cd=#{ptsCd}
    </insert>
    <insert id="insertPtsDataJandata">
        insert into planocycle.work_priority_all_pts_data_jand(company_cd,jan,face_count,tai_cd,tana_cd,tanaposition_cd,
        face_men, face_kaiten, tumiagesu, zaikosu, face_displayflg, face_position, depth_display_num,
        create_time,edit_time,author_cd,editer_cd, pts_cd) values
        <foreach collection="list" index="index" item="item" separator=",">
            (#{companyCd},#{item.janCd},#{item.faceFact},#{item.taiCd},#{item.tanaCd},#{item.tanaPositionCd},
            #{item.faceMen},#{item.faceKaiten},#{item.tumiagesu},#{item.zaikosu},#{item.faceDisplayflg},#{item.facePosition},
            #{item.depthDisplayNum},
            now(), now(),#{authorCd},#{authorCd},#{id})
        </foreach>
    </insert>
</mapper>