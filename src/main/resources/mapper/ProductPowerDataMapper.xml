<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.trechina.planocycle.mapper.ProductPowerDataMapper">
    <resultMap id="syokikaMap" type="com.trechina.planocycle.entity.po.ProductPowerMstData">
        <result property="jan" jdbcType="VARCHAR" column="jan"/>
        <result property="skuName" jdbcType="VARCHAR" column="sku_name"/>
        <result property="classifyBig" jdbcType="VARCHAR" column="classify_big"/>
        <result property="classifyMiddle" jdbcType="VARCHAR" column="classify_middle"/>
        <result property="classifySmall" jdbcType="VARCHAR" column="classify_small"/>
        <result property="classifyFine" jdbcType="VARCHAR" column="classify_fine"/>
        <result property="pdPosAmount" jdbcType="VARCHAR" column="pos_amount"/>
        <result property="pdPosNum" jdbcType="VARCHAR" column="pos_num"/>
        <result property="pdBranchAmount" jdbcType="VARCHAR" column="branch_amount"/>
        <result property="pdBranchNum" jdbcType="VARCHAR" column="branch_num"/>
        <result property="pdCompareAmount" jdbcType="VARCHAR" column="compare_amount"/>
        <result property="pdCompareNum" jdbcType="VARCHAR" column="compare_num"/>
        <result property="pdBranchCompareAmount" jdbcType="VARCHAR" column="branch_compare_amount"/>
        <result property="pdBranchCompareNum" jdbcType="VARCHAR" column="branch_compare_num"/>
    </resultMap>

    <resultMap id="allMap" type="com.trechina.planocycle.entity.po.ProductPowerMstData">
        <result property="jan" jdbcType="VARCHAR" column="jan"/>
        <result property="skuName" jdbcType="VARCHAR" column="skuName"/>
        <result property="classifyBig" jdbcType="VARCHAR" column="classifyBig"/>
        <result property="classifyMiddle" jdbcType="VARCHAR" column="classifyMiddle"/>
        <result property="classifySmall" jdbcType="VARCHAR" column="classifySmall"/>
        <result property="classifyFine" jdbcType="VARCHAR" column="classifyFine"/>
        <result property="pdPosAmount" jdbcType="VARCHAR" column="pPosAmount"/>
        <result property="pdPosNum" jdbcType="VARCHAR" column="pPosNum"/>
        <result property="pdBranchAmount" jdbcType="VARCHAR" column="pBranchAmount"/>
        <result property="pdBranchNum" jdbcType="VARCHAR" column="pBranchNum"/>
        <result property="pdCompareAmount" jdbcType="VARCHAR" column="pCompareAmount"/>
        <result property="pdCompareNum" jdbcType="VARCHAR" column="pCompareNum"/>
        <result property="pdBranchCompareAmount" jdbcType="VARCHAR" column="pBranchCompareAmount"/>
        <result property="pdBranchCompareNum" jdbcType="VARCHAR" column="pBranchCompareNum"/>
        <result property="gdPosAmount" jdbcType="VARCHAR" column="gPosAmount"/>
        <result property="gdPosNum" jdbcType="VARCHAR" column="gPosNum"/>
        <result property="gdBranchAmount" jdbcType="VARCHAR" column="gBranchAmount"/>
        <result property="gdBranchNum" jdbcType="VARCHAR" column="gBranchNum"/>
        <result property="gdCompareAmount" jdbcType="VARCHAR" column="gCompareAmount"/>
        <result property="gdCompareNum" jdbcType="VARCHAR" column="gCompareNum"/>
        <result property="gdBranchCompareAmount" jdbcType="VARCHAR" column="gBranchCompareAmount"/>
        <result property="gdBranchCompareNum" jdbcType="VARCHAR" column="gBranchCompareNum"/>
    </resultMap>
    <resultMap id="wKSyokikaMap" type="com.trechina.planocycle.entity.po.WKYobiiiternData">
        <result property="dataCd" column="dataCd"/>
        <result property="dataName" column="dataName"/>
        <result property="dataSort" column="dataSort"/>
        <result property="dataValue" column="dataValue"/>
        <result property="jan" column="jan"/>
    </resultMap>

    <resultMap id="rankMap" type="com.trechina.planocycle.entity.po.ProductPowerMstData">
        <result property="jan" jdbcType="VARCHAR" column="jan"/>
        <result property="skuName" jdbcType="VARCHAR" column="skuName"/>
        <result property="classifyBig" jdbcType="VARCHAR" column="classifyBig"/>
        <result property="classifyMiddle" jdbcType="VARCHAR" column="classifyMiddle"/>
        <result property="classifySmall" jdbcType="VARCHAR" column="classifySmall"/>
        <result property="classifyFine" jdbcType="VARCHAR" column="classifyFine"/>
        <result property="pdPosAmount" jdbcType="VARCHAR" column="pPosAmount"/>
        <result property="pdPosNum" jdbcType="VARCHAR" column="pPosNum"/>
        <result property="pdBranchAmount" jdbcType="VARCHAR" column="pBranchAmount"/>
        <result property="pdBranchNum" jdbcType="VARCHAR" column="pBranchNum"/>
        <result property="pdCompareAmount" jdbcType="VARCHAR" column="pCompareAmount"/>
        <result property="pdCompareNum" jdbcType="VARCHAR" column="pCompareNum"/>
        <result property="pdBranchCompareAmount" jdbcType="VARCHAR" column="pBranchCompareAmount"/>
        <result property="pdBranchCompareNum" jdbcType="VARCHAR" column="pBranchCompareNum"/>
        <result property="gdPosAmount" jdbcType="VARCHAR" column="gPosAmount"/>
        <result property="gdPosNum" jdbcType="VARCHAR" column="gPosNum"/>
        <result property="gdBranchAmount" jdbcType="VARCHAR" column="gBranchAmount"/>
        <result property="gdBranchNum" jdbcType="VARCHAR" column="gBranchNum"/>
        <result property="gdCompareAmount" jdbcType="VARCHAR" column="gCompareAmount"/>
        <result property="gdCompareNum" jdbcType="VARCHAR" column="gCompareNum"/>
        <result property="gdBranchCompareAmount" jdbcType="VARCHAR" column="gBranchCompareAmount"/>
        <result property="gdBranchCompareNum" jdbcType="VARCHAR" column="gBranchCompareNum"/>
        <result property="item1" jdbcType="DECIMAL" column="item1"/>
        <result property="item2" jdbcType="DECIMAL" column="item2"/>
        <result property="item3" jdbcType="DECIMAL" column="item3"/>
        <result property="item4" jdbcType="DECIMAL" column="item4"/>
        <result property="item5" jdbcType="DECIMAL" column="item5"/>
        <result property="item6" jdbcType="DECIMAL" column="item6"/>
        <result property="item7" jdbcType="DECIMAL" column="item7"/>
        <result property="item8" jdbcType="DECIMAL" column="item8"/>
        <result property="item9" jdbcType="DECIMAL" column="item9"/>
        <result property="item10" jdbcType="DECIMAL" column="item10"/>
        <result property="pdPosAmountRank" jdbcType="DECIMAL" column="pdPosAmountRank"/>
        <result property="pdPosNumRank" jdbcType="DECIMAL" column="pdPosNumRank"/>
        <result property="pdBranchAmountRank" jdbcType="DECIMAL" column="pdBranchAmountRank"/>
        <result property="pdBranchNumRank" jdbcType="DECIMAL" column="pdBranchNumRank"/>
        <result property="pdCompareAmountRank" jdbcType="DECIMAL" column="pdCompareAmountRank"/>
        <result property="pdCompareNumRank" jdbcType="DECIMAL" column="pdCompareNumRank"/>
        <result property="pdBranchCompareAmountRank" jdbcType="DECIMAL" column="pdBranchCompareAmountRank"/>
        <result property="pdBranchCompareNumRank" jdbcType="DECIMAL" column="pdBranchCompareNumRank"/>
        <result property="gdPosAmountRank" jdbcType="DECIMAL" column="gdPosAmountRank"/>
        <result property="gdPosNumRank" jdbcType="DECIMAL" column="gdPosNumRank"/>
        <result property="gdBranchAmountRank" jdbcType="DECIMAL" column="gdBranchAmountRank"/>
        <result property="gdBranchNumRank" jdbcType="DECIMAL" column="gdBranchNumRank"/>
        <result property="gdCompareAmountRank" jdbcType="DECIMAL" column="gdCompareAmountRank"/>
        <result property="gdCompareNumRank" jdbcType="DECIMAL" column="gdCompareNumRank"/>
        <result property="gdBranchCompareAmountRank" jdbcType="DECIMAL" column="gdBranchCompareAmountRank"/>
        <result property="gdBranchCompareNumRank" jdbcType="DECIMAL" column="gdBranchCompareNumRank"/>
        <result property="item1Rank" jdbcType="DECIMAL" column="item1Rank"/>
        <result property="item2Rank" jdbcType="DECIMAL" column="item2Rank"/>
        <result property="item3Rank" jdbcType="DECIMAL" column="item3Rank"/>
        <result property="item4Rank" jdbcType="DECIMAL" column="item4Rank"/>
        <result property="item5Rank" jdbcType="DECIMAL" column="item5Rank"/>
        <result property="item6Rank" jdbcType="DECIMAL" column="item6Rank"/>
        <result property="item7Rank" jdbcType="DECIMAL" column="item7Rank"/>
        <result property="item8Rank" jdbcType="DECIMAL" column="item8Rank"/>
        <result property="item9Rank" jdbcType="DECIMAL" column="item9Rank"/>
        <result property="item10Rank" jdbcType="DECIMAL" column="item10Rank"/>
    </resultMap>

    <resultMap id="reserveMap" type="com.trechina.planocycle.entity.vo.ReserveMstVo">
        <result column="data_cd" jdbcType="VARCHAR" property="valueCd"/>
        <result column="data_name" jdbcType="VARCHAR" property="dataName"/>
    </resultMap>
    <insert id="insert">
        insert into planocycle.work_product_power_syokika (company_cd,author_cd,jan,sku_name,classify_big,classify_middle,classify_small,classify_fine,pos_amount,
        pos_num,branch_amount,branch_num,compare_amount,compare_num,branch_compare_amount,branch_compare_num
        )
        values
            <foreach collection="keyNameList" separator="," item="lists">

                 <foreach collection="lists" item="item" separator="," open="(" close=")" index="index">
                     <choose>
                         <when test="index == 8 || index==9 || index == 10 || index == 11 || index == 12 || index == 13 || index == 14 || index == 15">
                           #{item} ::numeric
                         </when>
                         <otherwise>
                             #{item} ::varchar
                         </otherwise>
                     </choose>

                 </foreach>

            </foreach>

    </insert>
    <insert id="insertGroup">
        insert into planocycle.work_product_power_kokyaku (company_cd,author_cd,jan,pos_amount,
        pos_num,branch_amount,branch_num,compare_amount,compare_num,branch_compare_amount,branch_compare_num)
        values
        <foreach collection="keyNameList" separator="," item="lists">

            <foreach collection="lists" item="item" separator="," open="(" close=")" index="index">

                <choose>
                    <when test="index == 3 || index == 4 || index==5 || index == 6 || index == 7 || index == 8 || index == 9 || index == 10 ">
                        #{item} ::numeric
                    </when>
                    <otherwise>
                        #{item} ::text
                    </otherwise>
                </choose>
            </foreach>

        </foreach>
    </insert>
    <insert id="insertYobilitem">
        insert into planocycle.work_product_power_reserve_mst(company_cd,author_cd,data_cd,data_name,data_sort)
        values (#{companyCd},#{authorCd},#{dataCd},#{itemName},#{dataSort})
        on conflict(company_cd,author_cd,data_cd)
        do update set data_name=#{itemName},author_cd=#{authorCd}
    </insert>
    <insert id="insertWkSyokikaForFinally">
        insert into planocycle.work_product_power_syokika(company_cd,author_cd,jan,sku_name,classify_big,classify_middle,classify_small,classify_fine,pos_amount,
            pos_num,branch_amount,branch_num,compare_amount,compare_num,branch_compare_amount,branch_compare_num)
            select (company_cd,author_cd,jan,sku_name,classify_big,classify_middle,classify_small,classify_fine,pos_amount,
                pos_num,branch_amount,branch_num,compare_amount,compare_num,branch_compare_amount,branch_compare_num)
            from planocycle.product_power_syokika
            where company_cd = #{companyCd,jdbcType=VARCHAR}
              and product_power_cd = #{productPowerCd,jdbcType=INTEGER}
    </insert>
    <insert id="insertWkKokyakuForFinally">
        insert into planocycle.work_product_power_kokyaku(company_cd,author_cd,jan,sku_name,pos_amount,
            pos_num,branch_amount,branch_num,compare_amount,compare_num,branch_compare_amount,branch_compare_num)
        select (company_cd,author_cd,jan,sku_name,pos_amount,
            pos_num,branch_amount,branch_num,compare_amount,compare_num,branch_compare_amount,branch_compare_num)
        from planocycle.product_power_kokyaku
        where company_cd = #{companyCd,jdbcType=VARCHAR}
        and product_power_cd = #{productPowerCd,jdbcType=INTEGER}
    </insert>
    <insert id="insertYobilitemData">
        insert into planocycle.work_product_power_reserve_data(company_cd,author_cd,data_cd,jan,data_value)
        values
        <foreach collection="dataList" separator="," item="item">
            (
                #{item.companyCd},
                #{item.authorCd},
                #{item.dataCd},
                #{item.jan},
                #{item.dataValue}
            )
        </foreach>
    </insert>
    <insert id="endSyokikaForWK">
        insert into planocycle.product_power_syokika(company_cd,product_power_cd,jan,sku_name,pos_amount,pos_num,branch_amount,branch_num,compare_amount,
                    classify_big,classify_middle,classify_small,classify_fine,
                    compare_num,branch_compare_amount,branch_compare_num,author_cd,create_time)
            select company_cd,#{productPowerCd},jan,sku_name,pos_amount,pos_num,branch_amount,branch_num,compare_amount,
                    classify_big,classify_middle,classify_small,classify_fine,
                    compare_num,branch_compare_amount,branch_compare_num,#{authorCd},now()
        from planocycle.work_product_power_syokika
        where company_cd = #{companyCd} and author_cd = #{authorCd}
    </insert>
    <insert id="endGroupForWK">
        insert into planocycle.product_power_kokyaku(company_cd,product_power_cd,jan,pos_amount,pos_num,branch_amount,branch_num,compare_amount,
                                                     compare_num,branch_compare_amount,branch_compare_num,author_cd,create_time)
        select company_cd,${productPowerCd},jan,pos_amount,pos_num,branch_amount,branch_num,compare_amount,
               compare_num,branch_compare_amount,branch_compare_num,#{authorCd},now()
        from planocycle.work_product_power_kokyaku
        where company_cd = #{companyCd} and author_cd = #{authorCd}
    </insert>
    <insert id="endYobiiiternForWk">
        insert into planocycle.product_power_reserve_mst(company_cd,product_power_cd,data_cd,data_name,author_cd,create_time,data_sort)
        select company_cd,#{productPowerCd},data_cd,data_name,#{authorCd},now(),data_sort
        from planocycle.work_product_power_reserve_mst
        where company_cd = #{companyCd} and author_cd = #{authorCd}
    </insert>
    <insert id="endYobiiiternDataForWk">
        insert into planocycle.product_power_reserve_data(company_cd,product_power_cd,data_cd,jan,data_value,author_cd,create_time)
        select company_cd,#{productPowerCd},data_cd,jan,data_value,#{authorCd},now()
        from planocycle.work_product_power_reserve_data
        where company_cd = #{companyCd} and author_cd = #{authorCd}
    </insert>
    <insert id="setWKData" >
        insert into planocycle.work_product_power_mst_data(company_cd,jan,sku_name,classify_big,classify_middle,classify_small,classify_fine,pd_pos_amount,pd_pos_num,
                                                          pd_branch_amount,pd_branch_num,pd_compare_amount,pd_compare_num,pd_branch_compare_amount,pd_branch_compare_num,
                                                          gd_pos_amount,gd_pos_num,gd_branch_amount,gd_branch_num,gd_compare_amount,gd_compare_num,gd_branch_compare_amount,
                                                          gd_branch_compare_num,item1,item2,item3,item4,item5,item6,item7,item8,item9,item10,rank_result,author_cd,
                                                          create_time,pd_pos_amount_rank,pd_pos_num_rank,pd_branch_amount_rank,pd_branch_num_rank,pd_compare_amount_rank,
                                                          pd_compare_num_rank,pd_branch_compare_amount_rank,pd_branch_compare_num_rank,gd_pos_amount_rank,gd_pos_num_rank,
                                                          gd_branch_amount_rank,gd_branch_num_rank ,gd_compare_amount_rank,gd_compare_num_rank,gd_branch_compare_amount_rank,
                                                          gd_branch_compare_num_rank,item1_rank,item2_rank,item3_rank,item4_rank,item5_rank,item6_rank,item7_rank,item8_rank,
                                                          item9_rank,item10_rank)

        values
               <foreach collection="list" separator="," item="item" >
                   (#{companyCd},#{item.jan},#{item.skuName},#{item.classifyBig},#{item.classifyMiddle},#{item.classifySmall},#{item.classifyFine},#{item.pdPosAmount},
                    #{item.pdPosNum},#{item.pdBranchAmount},#{item.pdBranchNum},#{item.pdCompareAmount},#{item.pdCompareNum},#{item.pdBranchCompareAmount},#{item.pdBranchCompareNum},
                    #{item.gdPosAmount},#{item.gdPosNum},#{item.gdBranchAmount},#{item.gdBranchNum},#{item.gdCompareAmount},#{item.gdCompareNum},#{item.gdBranchCompareAmount},
                    #{item.gdBranchCompareNum},#{item.item1},#{item.item2},#{item.item3},#{item.item4},#{item.item5},#{item.item6},#{item.item7},#{item.item8},#{item.item9},
                    #{item.item10},#{item.rankResult},#{authorCd},now(),#{item.pdPosAmountRank},#{item.pdPosNumRank},#{item.pdBranchAmountRank},#{item.pdBranchNumRank},
                    #{item.pdCompareAmountRank},#{item.pdCompareNumRank},#{item.pdBranchCompareAmountRank},#{item.pdBranchCompareNumRank},#{item.gdPosAmountRank},#{item.gdPosNumRank},
                    #{item.gdBranchAmountRank},#{item.gdBranchNumRank},#{item.gdCompareAmountRank},#{item.gdCompareNumRank},#{item.gdBranchCompareAmountRank},#{item.gdBranchCompareNumRank},
                    #{item.item1Rank},#{item.item2Rank},#{item.item3Rank},#{item.item4Rank},#{item.item5Rank},#{item.item6Rank},#{item.item7Rank},#{item.item8Rank},#{item.item9Rank},
                    #{item.item10Rank})
               </foreach>

    </insert>

    <update id="deleteSyokika">
        update planocycle.product_power_syokika set deleteflg=1,editer_cd=#{authorCd},edit_time=now()
        where company_cd = #{companyCd,jdbcType=VARCHAR}
          and product_power_cd = #{productPowerCd,jdbcType=INTEGER}
    </update>
    <update id="deleteGroup">
        update planocycle.product_power_kokyaku set deleteflg=1,editer_cd=#{authorCd},edit_time=now()
        where company_cd = #{companyCd,jdbcType=VARCHAR}
          and product_power_cd = #{productPowerCd,jdbcType=INTEGER}
    </update>
    <update id="deleteYobiiitern">
        update planocycle.product_power_reserve_data set deleteflg=1,editer_cd=#{authorCd},edit_time=now()
        where company_cd = #{companyCd,jdbcType=VARCHAR}
          and product_power_cd = #{productPowerCd,jdbcType=INTEGER}
    </update>
    <update id="deleteYobiiiternData">
        update planocycle.product_power_reserve_mst set deleteflg=1,editer_cd=#{authorCd},edit_time=now()
        where company_cd = #{companyCd,jdbcType=VARCHAR}
          and product_power_cd = #{productPowerCd,jdbcType=INTEGER}
    </update>
    <delete id="deleteWKSyokika">
        delete from planocycle.work_product_power_syokika where company_cd=#{companyCd} and author_cd=#{authorCd}
    </delete>
    <delete id="deleteWKKokyaku">
        delete from planocycle.work_product_power_kokyaku where company_cd=#{companyCd} and author_cd=#{authorCd}
    </delete>
    <delete id="deleteWKYobiiitern">
        delete from planocycle.work_product_power_reserve_mst where company_cd=#{companyCd} and author_cd=#{authorCd}
    </delete>
    <delete id="deleteWKYobiiiternData">
        delete from planocycle.work_product_power_reserve_data where company_cd=#{companyCd} and author_cd=#{authorCd}
    </delete>
    <delete id="phyDeleteSyokika">
        delete from planocycle.product_power_syokika where company_cd = #{companyCd,jdbcType=VARCHAR}
        and product_power_cd = #{productPowerCd,jdbcType=INTEGER} and deleteflg=0
    </delete>
    <delete id="phyDeleteGroup">
        delete from planocycle.product_power_kokyaku where company_cd = #{companyCd,jdbcType=VARCHAR}
        and product_power_cd = #{productPowerCd,jdbcType=INTEGER} and deleteflg=0
    </delete>
    <delete id="phyDeleteYobiiitern">
        delete from planocycle.product_power_reserve_mst where company_cd = #{companyCd,jdbcType=VARCHAR}
        and product_power_cd = #{productPowerCd,jdbcType=INTEGER} and deleteflg=0
    </delete>
    <delete id="phyDeleteYobiiiternData">
        delete from planocycle.product_power_reserve_data where company_cd = #{companyCd,jdbcType=VARCHAR}
        and product_power_cd = #{productPowerCd,jdbcType=INTEGER} and deleteflg=0
    </delete>
    <delete id="deleteWKData">
        delete from planocycle.work_product_power_mst_data where company_cd =#{companyCd} and author_cd = #{authorCd}
    </delete>
    <delete id="deleteData">
        delete  from planocycle.product_power_mst_data
        where company_cd =#{companyCd} and author_cd = #{authorCd} and product_power_cd = #{productPowerCd}
    </delete>
    <delete id="deleteWKYobiiiternCd">
        delete from planocycle.work_product_power_reserve_mst where company_cd=#{companyCd} and author_cd=#{authorCd} and data_cd = #{valueCd}
    </delete>
    <delete id="deleteWKYobiiiternDataCd">
        delete from planocycle.work_product_power_reserve_data where company_cd=#{companyCd} and author_cd=#{authorCd} and data_cd = #{valueCd}
    </delete>

    <update id="deleteRankData">
        update planocycle.product_power_mst_data set deleteflg=1,editer_cd=#{authorCd},edit_time=now()
        where company_cd = #{companyCd,jdbcType=VARCHAR}
          and product_power_cd = #{productPowerCd,jdbcType=INTEGER}
    </update>
    <update id="setPowerMstData">
        insert into planocycle.work_product_power_mst_data(company_cd,jan,sku_name,classify_big,classify_middle,classify_small,classify_fine,pd_pos_amount,
                                                           pd_pos_num,pd_branch_amount,pd_branch_num,pd_compare_amount,pd_compare_num,pd_branch_compare_amount,pd_branch_compare_num,gd_pos_amount,gd_pos_num,gd_branch_amount,
                                                           gd_branch_num,gd_compare_amount,gd_compare_num,gd_branch_compare_amount,gd_branch_compare_num
        )
        select s.company_cd,s.jan,s.sku_name,s.classify_big,s.classify_middle,s.classify_small,s.classify_fine,s.pos_amount,s.pos_num,s.branch_amount,s.branch_num,
               s.compare_amount,s.compare_num,s.branch_compare_amount,s.branch_compare_num,kk.pos_amount,kk.pos_num,kk.branch_amount,kk.branch_num,kk.compare_amount,
               kk.compare_num,kk.branch_compare_amount,kk.branch_compare_num

        from planocycle.work_product_power_syokika s, planocycle.work_product_power_kokyaku kk

    </update>
    <update id="setData">
        insert into planocycle.product_power_mst_data (company_cd,jan,sku_name,classify_big,classify_middle,classify_small,classify_fine,pd_pos_amount,pd_pos_num,
                                                       pd_branch_amount,pd_branch_num,pd_compare_amount,pd_compare_num,pd_branch_compare_amount,pd_branch_compare_num,
                                                       gd_pos_amount,gd_pos_num,gd_branch_amount,gd_branch_num,gd_compare_amount,gd_compare_num,gd_branch_compare_amount,
                                                       gd_branch_compare_num,item1,item2,item3,item4,item5,item6,item7,item8,item9,item10,rank_result,author_cd,
                                                       create_time,pd_pos_amount_rank,pd_pos_num_rank,pd_branch_amount_rank,pd_branch_num_rank,pd_compare_amount_rank,
                                                       pd_compare_num_rank,pd_branch_compare_amount_rank,pd_branch_compare_num_rank,gd_pos_amount_rank,gd_pos_num_rank,
                                                       gd_branch_amount_rank,gd_branch_num_rank ,gd_compare_amount_rank,gd_compare_num_rank,gd_branch_compare_amount_rank,
                                                       gd_branch_compare_num_rank,item1_rank,item2_rank,item3_rank,item4_rank,item5_rank,item6_rank,item7_rank,item8_rank,
                                                       item9_rank,item10_rank,product_power_cd)
        select  company_cd,jan,sku_name,classify_big,classify_middle,classify_small,classify_fine,pd_pos_amount,pd_pos_num,
                                                        pd_branch_amount,pd_branch_num,pd_compare_amount,pd_compare_num,pd_branch_compare_amount,pd_branch_compare_num,
                                                        gd_pos_amount,gd_pos_num,gd_branch_amount,gd_branch_num,gd_compare_amount,gd_compare_num,gd_branch_compare_amount,
                                                        gd_branch_compare_num,item1,item2,item3,item4,item5,item6,item7,item8,item9,item10,rank_result,author_cd,
                                                        create_time,pd_pos_amount_rank,pd_pos_num_rank,pd_branch_amount_rank,pd_branch_num_rank,pd_compare_amount_rank,
                                                        pd_compare_num_rank,pd_branch_compare_amount_rank,pd_branch_compare_num_rank,gd_pos_amount_rank,gd_pos_num_rank,
                                                        gd_branch_amount_rank,gd_branch_num_rank ,gd_compare_amount_rank,gd_compare_num_rank,gd_branch_compare_amount_rank,
                                                        gd_branch_compare_num_rank,item1_rank,item2_rank,item3_rank,item4_rank,item5_rank,item6_rank,item7_rank,item8_rank,
                                                        item9_rank,item10_rank,#{productPowerCd}
        from planocycle.work_product_power_mst_data
        where company_cd = #{companyCd} and author_cd = #{authorCd}

    </update>
    <insert id="setSyokikaAllData">
        insert into planocycle.work_product_power_syokika
        <foreach collection="lists[0]" item="list" open="(" close=")" separator="," index="index">
            ${index}
        </foreach>
        values
        <foreach collection="lists" item="list" separator=","  index="index">
            <foreach collection="list" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </foreach>
    </insert>
    <insert id="setWkDataForFinally">
        insert into planocycle.work_product_power_mst_data (company_cd,jan,sku_name,classify_big,classify_middle,classify_small,classify_fine,pd_pos_amount,pd_pos_num,
                                                       pd_branch_amount,pd_branch_num,pd_compare_amount,pd_compare_num,pd_branch_compare_amount,pd_branch_compare_num,
                                                       gd_pos_amount,gd_pos_num,gd_branch_amount,gd_branch_num,gd_compare_amount,gd_compare_num,gd_branch_compare_amount,
                                                       gd_branch_compare_num,item1,item2,item3,item4,item5,item6,item7,item8,item9,item10,rank_result,author_cd,
                                                       create_time,pd_pos_amount_rank,pd_pos_num_rank,pd_branch_amount_rank,pd_branch_num_rank,pd_compare_amount_rank,
                                                       pd_compare_num_rank,pd_branch_compare_amount_rank,pd_branch_compare_num_rank,gd_pos_amount_rank,gd_pos_num_rank,
                                                       gd_branch_amount_rank,gd_branch_num_rank ,gd_compare_amount_rank,gd_compare_num_rank,gd_branch_compare_amount_rank,
                                                       gd_branch_compare_num_rank,item1_rank,item2_rank,item3_rank,item4_rank,item5_rank,item6_rank,item7_rank,item8_rank,
                                                       item9_rank,item10_rank)
        select  company_cd,jan,sku_name,classify_big,classify_middle,classify_small,classify_fine,pd_pos_amount,pd_pos_num,
                pd_branch_amount,pd_branch_num,pd_compare_amount,pd_compare_num,pd_branch_compare_amount,pd_branch_compare_num,
                gd_pos_amount,gd_pos_num,gd_branch_amount,gd_branch_num,gd_compare_amount,gd_compare_num,gd_branch_compare_amount,
                gd_branch_compare_num,item1,item2,item3,item4,item5,item6,item7,item8,item9,item10,rank_result,#{authorCd},
                create_time,pd_pos_amount_rank,pd_pos_num_rank,pd_branch_amount_rank,pd_branch_num_rank,pd_compare_amount_rank,
                pd_compare_num_rank,pd_branch_compare_amount_rank,pd_branch_compare_num_rank,gd_pos_amount_rank,gd_pos_num_rank,
                gd_branch_amount_rank,gd_branch_num_rank ,gd_compare_amount_rank,gd_compare_num_rank,gd_branch_compare_amount_rank,
                gd_branch_compare_num_rank,item1_rank,item2_rank,item3_rank,item4_rank,item5_rank,item6_rank,item7_rank,item8_rank,
                item9_rank,item10_rank
        from planocycle.product_power_mst_data
        where company_cd = #{companyCd,jdbcType=VARCHAR}
          and product_power_cd = #{productPowerCd,jdbcType=INTEGER} and deleteflg=0

    </insert>
    <insert id="setWkYobilitemDataForFinally">
        insert into planocycle.work_product_power_reserve_data(company_cd,author_cd,data_cd,jan,data_value)
        select company_cd,#{authorCd},data_cd,jan,data_value
        from planocycle.product_power_reserve_data
        where company_cd = #{companyCd,jdbcType=VARCHAR}
          and product_power_cd = #{productPowerCd,jdbcType=INTEGER} and deleteflg=0
    </insert>
    <insert id="setWkYobilitemForFinally">
        insert into planocycle.work_product_power_reserve_mst(company_cd,author_cd,data_cd,data_name,data_sort)
        select company_cd,#{authorCd},data_cd,data_name,data_sort
        from planocycle.product_power_reserve_mst
         where company_cd = #{companyCd,jdbcType=VARCHAR}
                 and product_power_cd = #{productPowerCd,jdbcType=INTEGER} and deleteflg=0
    </insert>
    <insert id="setWkGroupForFinally">
        insert into planocycle.work_product_power_kokyaku(company_cd,author_cd,jan,sku_name,pos_amount,
                                                          pos_num,branch_amount,branch_num,compare_amount,compare_num,branch_compare_amount,branch_compare_num)
        select company_cd,#{authorCd},jan,sku_name,pos_amount,
                pos_num,branch_amount,branch_num,compare_amount,compare_num,branch_compare_amount,branch_compare_num
        from planocycle.product_power_kokyaku
        where company_cd = #{companyCd,jdbcType=VARCHAR}
          and product_power_cd = #{productPowerCd,jdbcType=INTEGER} and deleteflg=0
    </insert>
    <insert id="setWkSyokikaForFinally">
        insert into planocycle.work_product_power_syokika(company_cd,author_cd,jan,sku_name,pos_amount,pos_num,branch_amount,branch_num,compare_amount,
                                                                                         classify_big,classify_middle,classify_small,classify_fine,
                                                     compare_num,branch_compare_amount,branch_compare_num)
        select company_cd,#{authorCd},jan,sku_name,pos_amount,pos_num,branch_amount,branch_num,compare_amount,
               classify_big,classify_middle,classify_small,classify_fine,
               compare_num,branch_compare_amount,branch_compare_num
        from planocycle.product_power_syokika
        where company_cd = #{companyCd} and product_power_cd = #{productPowerCd} and deleteflg=0
    </insert>
    <select id="selectWKSyokika" resultMap="syokikaMap">
        select jan,sku_name,pos_amount,classify_big,classify_middle,classify_small,classify_fine,
               pos_num,branch_amount,branch_num,compare_amount,compare_num,branch_compare_amount,branch_compare_num
        from planocycle.work_product_power_syokika where company_cd=#{companyCd} and author_cd=#{authorCd}
        order by jan
    </select>
    <select id="selectWKKokyaku" resultMap="allMap">
        select s.jan as jan,s.sku_name as skuName,k.pos_amount as gPosAmount,k.pos_num as gPosNum,k.branch_amount as gBranchAmount,
               k.branch_num as gBranchNum,k.compare_amount as gCompareAmount,k.compare_num as gCompareNum,k.branch_compare_amount as gBranchCompareAmount,
               k.branch_compare_num as gBranchCompareNum,s.classify_big as classifyBig,s.classify_middle as classifyMiddle,s.classify_small as classifySmall,
               s.classify_fine as classifyFine,s.pos_amount as pPosAmount,s.pos_num as pPosNum,s.branch_amount as pBranchAmount,s.branch_num as pBranchNum,
               s.compare_amount as pCompareAmount,s.compare_num as pCompareNum,
               s.branch_compare_amount as pBranchCompareAmount,s.branch_compare_num as pBranchCompareNum

        from  planocycle.work_product_power_syokika s left join planocycle.work_product_power_kokyaku k
                on k.jan = s.jan and k.author_cd=s.author_cd and  s.company_cd = k.company_cd
        where  s.author_cd=#{authorCd} and s.company_cd = #{companyCd}
        order by jan
    </select>
    <select id="getProductPowerMstData" resultType="com.trechina.planocycle.entity.po.ProductPowerMstData">
        select * from planocycle.product_power_mst_data where company_cd=#{companyCd} and product_power_cd=#{productPowerCd} and deleteflg=0
    </select>
    <select id="syokikaPowerCdNum" resultType="java.lang.Integer">
        select count(1) from planocycle.product_power_syokika
        where company_cd = #{companyCd,jdbcType=VARCHAR}
          and product_power_cd = #{productPowerCd,jdbcType=INTEGER}
    </select>
    <select id="selectSyokika" resultType="com.trechina.planocycle.entity.po.ProductPowerSyokika">
        select * from planocycle.product_power_syokika
        where company_cd = #{companyCd,jdbcType=VARCHAR}
          and product_power_cd = #{productPowerCd,jdbcType=INTEGER} and deleteflg=0
    </select>
    <select id="groupPowerCdNum" resultType="java.lang.Integer">
        select count(1) from planocycle.product_power_kokyaku
        where company_cd = #{companyCd,jdbcType=VARCHAR}
          and product_power_cd = #{productPowerCd,jdbcType=INTEGER}
    </select>
    <select id="yobiiiternPowerCdNum" resultType="java.lang.Integer">
        select count(1) from planocycle.product_power_yobiitem
        where company_cd = #{companyCd,jdbcType=VARCHAR}
          and product_power_cd = #{productPowerCd,jdbcType=INTEGER}
    </select>

    <select id="selectWKYobiiiternData" resultMap="wKSyokikaMap" >
        select
            dd.data_value as dataValue,dd.jan as jan,mm.data_name as dataName,mm.data_cd as dataCd
        from  planocycle.work_product_power_reserve_mst mm
        inner join planocycle.work_product_power_reserve_data dd
            on mm.data_cd = dd.data_cd
        where  mm.author_cd = #{authorCd} and mm.company_cd=#{companyCd}
    </select>
    <select id="rankCalculates" resultMap="rankMap">
        select mst.company_cd as companyCd,mst.jan as jan,mst.sku_name as skuName,mst.classify_big as classifyBig,mst.classify_middle as classifyMiddle,mst.classify_small as classifySmall,mst.classify_fine as classifyFine,
               mst.pd_pos_amount as pPosAmount,mst.pd_pos_num as pPosNum,
               mst.pd_branch_amount as pBranchAmount,mst.pd_branch_num as pBranchNum,mst.pd_compare_amount as pCompareAmount,mst.pd_compare_num as pCompareNum,mst.pd_branch_compare_amount as pBranchCompareAmount,
               mst.pd_branch_compare_num as pBranchCompareNum,
               mst.gd_pos_amount gPosAmount,mst.gd_pos_num as gPosNum,mst.gd_branch_amount as gBranchAmount,mst.gd_branch_num as gBranchNum,mst.gd_compare_amount as gCompareAmount,mst.gd_compare_num as gCompareNum,
               mst.gd_branch_compare_amount as  gBranchCompareAmount,
               mst.gd_branch_compare_num as gBranchCompareNum,mst.item1 as item1,mst.item2 as item2,mst.item3 as item3,mst.item4 as item4,mst.item5 as item5,mst.item6 as item6,mst.item7 as item7,mst.item8 as item8,mst.item9 as item9, mst.item10 as item10
        from planocycle.work_product_power_mst_data mst
    </select>
    <select id="getAllData" resultMap="rankMap">
        select mst.company_cd as companyCd,mst.jan as jan,mst.sku_name as skuName,mst.classify_big as classifyBig,mst.classify_middle as classifyMiddle,mst.classify_small as classifySmall,mst.classify_fine as classifyFine,
               mst.pd_pos_amount as pPosAmount,mst.pd_pos_num as pPosNum,
               mst.pd_branch_amount as pBranchAmount,mst.pd_branch_num as pBranchNum,mst.pd_compare_amount as pCompareAmount,mst.pd_compare_num as pCompareNum,mst.pd_branch_compare_amount as pBranchCompareAmount,
               mst.pd_branch_compare_num as pBranchCompareNum,
               mst.gd_pos_amount gPosAmount,mst.gd_pos_num as gPosNum,mst.gd_branch_amount as gBranchAmount,mst.gd_branch_num as gBranchNum,mst.gd_compare_amount as gCompareAmount,mst.gd_compare_num as gCompareNum,
               mst.gd_branch_compare_amount as  gBranchCompareAmount,
               mst.gd_branch_compare_num as gBranchCompareNum,mst.item1 as item1,mst.item2 as item2,mst.item3 as item3,mst.item4 as item4,mst.item5 as item5,mst.item6 as item6,mst.item7 as item7,mst.item8 as item8,mst.item9 as item9, mst.item10 as item10,
               mst.rank_result as rankResult,mst.pd_pos_amount_rank as pdPosAmountRank,mst.pd_pos_num_rank as pdPosNumRank,mst.pd_branch_amount_rank as pdBranchAmountRank ,mst.pd_branch_num_rank as pdBranchNumRank ,mst.pd_compare_amount_rank as pdCompareAmountRank
                                          ,mst.pd_compare_num_rank as pdCompareNumRank
                                          ,mst.pd_branch_compare_amount_rank as pdBranchCompareAmountRank
                                          ,mst.pd_branch_compare_num_rank as pdBranchCompareNumRank
                                          ,mst.gd_pos_amount_rank as gdPosAmountRank
                                          ,mst.gd_pos_num_rank as gdPosNumRank
                                          ,mst.gd_branch_amount_rank as gdBranchAmountRank
                                          ,mst.gd_branch_num_rank as gdBranchNumRank
                                          ,mst.gd_compare_amount_rank as gdCompareAmountRank
                                          ,mst.gd_compare_num_rank as gdCompareNumRank
                                          ,mst.gd_branch_compare_amount_rank as gdBranchCompareAmountRank
                                          ,mst.gd_branch_compare_num_rank as gdBranchCompareNumRank
                                          ,mst.item1_rank as item1Rank
                                          ,mst.item2_rank as item2Rank
                                          ,mst.item3_rank as item3Rank
                                          ,mst.item4_rank as item4Rank
                                          ,mst.item5_rank as item5Rank
                                          ,mst.item6_rank as item6Rank
                                          ,mst.item7_rank as item7Rank
                                          ,mst.item8_rank as item8Rank
                                          ,mst.item9_rank as item9Rank
                                          ,mst.item10_rank as item10Rank
        from planocycle.product_power_mst_data mst
        where mst.product_power_cd = #{productPowerCd} and mst.company_cd = #{companyCd} and deleteflg=0
        order by rank_result asc
    </select>
    <select id="getParam" resultType="com.trechina.planocycle.entity.po.ProductPowerParamVo">
        select company_cd as company,product_power_cd as productPowerNo,customer_value,customer_condition,pos_value,prd_cd,prepare_value,rang_weight,recently_end_time,recently_flag,recently_st_time,
               season_end_time,season_flag,season_st_time,store_cd,year_flag,common_parts_data
        from planocycle.product_power_param_mst
        where company_cd=#{companyCd} and product_power_cd = #{productPowerCd} and deleteflg=0

    </select>
    <select id="getWKYobiiiternSort" resultType="java.lang.Integer">
        SELECT max(data_sort)
         from  planocycle.work_product_power_reserve_mst
        where company_cd=#{companyCd} and author_cd = #{aud}
    </select>
    <select id="getReserve" resultMap="reserveMap">
        select data_cd,data_name from planocycle.product_power_reserve_mst
        where company_cd=#{companyCd} and product_power_cd = #{productPowerCd}
        order by data_sort asc
    </select>
    <select id="getCheckedReserve" resultMap="reserveMap">
        select data_cd,data_name from planocycle.product_power_reserve_mst
        where company_cd=#{companyCd} and product_power_cd = #{productPowerCd}
        and data_cd in
        <foreach collection="checkedCodeList" index="index" item="item" open="(" close=")" separator=",">
            #{item}::Integer
        </foreach>
        order by data_sort asc
    </select>
    <select id="getDynamicAllData" resultType="map">
        select power_mst.jan,
        <foreach collection="classify" index="index" item="item" separator=",">
           jan_info."${item.sort}" as ${item.attr_val}
        </foreach>
        from planocycle.product_power_mst_data power_mst
        inner join ${tableName} jan_info on power_mst.jan=jan_info.${janCdColName}
        where power_mst.company_cd=#{companyCd} and power_mst.product_power_cd=#{productPowerCd}
    </select>
    <select id="getParamCount" resultType="java.lang.Integer">
        select count(1)
        from planocycle.product_power_param_mst
        where company_cd=#{company} and product_power_cd =#{productPowerNo}  and deleteflg=0
          and store_cd = #{storeCd}
          and prd_cd = #{prdCd}
          and recently_end_time = #{recentlyEndTime}
          and recently_flag = #{recentlyFlag}
          and recently_st_time = #{recentlyStTime}
          and season_flag = #{seasonFlag}
          and season_end_time = #{seasonEndTime}
          and season_st_time = #{seasonStTime}
    </select>
    <select id="getSyokikaAllData" resultType="java.util.Map">
        select power_syokika.*,
        <foreach collection="classify" index="index" item="item" separator=",">
            jan_info."${item.sort}" as ${item.attr_val}
        </foreach>
        from planocycle.work_product_power_syokika power_syokika
        left join ${tableName} jan_info on power_syokika.jan=jan_info.${janCdColName}
        where power_syokika.author_cd = #{authorCd} and power_syokika.company_cd = #{companyCd}
    </select>
    <select id="rankCalculation" resultType="java.util.Map">

    </select>

</mapper>
