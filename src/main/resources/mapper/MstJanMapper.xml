<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.trechina.planocycle.mapper.MstJanMapper">
    <update id="setJanInfo">
        insert into ${tableName}("1"
        <foreach collection="list" item="item" index="index">
            ,"${index}"
        </foreach>
        )
        values (#{jan}
        <foreach collection="list" item="item">
            ,#{item}
        </foreach>
        )
            on conflict("1")
        do update set
            <foreach collection="list" item="item" index="index" separator=",">
                "${index}" = #{item}
            </foreach>
    </update>
    <!--"{0}".prod_{1}_jan_attr_header_sys  -->
    <select id="getJanHeader" resultType="com.trechina.planocycle.entity.po.JanHeaderAttr">
        select "1" "attr","2" "attrVal","3" "sort", "4" "colSort" from ${tableName}
        where "1" in (
        <foreach collection="janColumn.split(',')" item="item" index="idx" separator=",">
            #{item,jdbcType=VARCHAR}
        </foreach>)
        order by "4" nulls first,"3"
    </select>

    <select id="getJanCount" resultType="long">
        <include refid="Base_Jan_List" />
    </select>

    <select id="getJanList" resultType="java.util.LinkedHashMap">
        <include refid="Base_Jan_List" />
        order by "1"
    </select>
    <select id="getJanInfoList" resultType="java.util.LinkedHashMap">
        select * from ${tableName} where "1" = #{jan}
    </select>
    <select id="getJanAttrList" resultType="java.util.LinkedHashMap">
    select "1","2","3","4","8","10" from ${tableName} where "1" not in ('jan_name','jan_cd')   order by "4"
    </select>
    <select id="getJanKaisouList" resultType="java.util.LinkedHashMap">
        select "1","2","3" from ${tableName} where "4" is not null and "1" like '%_name'
    </select>

    <!--"{0}".prod_{1}_jan_info  -->
    <sql id="Base_Jan_List">
        select ${column} from ${tableName}
        where "2" like concat(concat('%', #{janParamVO.fuzzyQuery}), '%')
        <if test="janParamVO.janContain != null and janParamVO.janContain != ''">
            and "1" in(
            <foreach collection="janParamVO.janContain.split(',')" item="items" separator=",">
                #{items}
            </foreach>
            )
        </if>
        <if test="janParamVO.janKato != null and janParamVO.janKato != ''">
            and "1" not in(
            <foreach collection="janParamVO.janKato.split(',')" item="items" separator=",">
                #{items}
            </foreach>)
        </if>
        <if test="janParamVO.prodCd != null and janParamVO.prodCd != ''">
            and(
            <foreach collection="janParamVO.prodCd" item="items" separator="or" >
                <foreach collection="items.split('_')" item="item" index="index" separator="and" open ="(" close = ")">
                    "${index*2+3}" =
                    <choose>
                        <when test="item.split('-').length==2">
                            '${item.split('-')[1]}'
                        </when>
                        <otherwise>
                            '${item}'
                        </otherwise>
                    </choose>
                </foreach>
            </foreach>
            )
        </if>
    </sql>

    <select id="getAttrName" resultType="com.trechina.planocycle.entity.po.JanAttrName">
        select * from (
        select "1" "value","2" "label",
        case "8" when '1' then '基本項目'
        when '2' then '商品分類'
        when '3' then '商品属性'
        when '4' then 'Plano-Cycle専用'
        when '5' then 'Plano-Cycle専用'
        when '6' then 'Plano-Cycle追加'
        else ''
        end as "attrType",
        case "9" when '1' then true else false end as "mandatory",
        case when "9" = '1' then true
        when t2.item_cd is not null then true
        else false end as "flag",t1."8",t1."3"
        from ${tableName} t1
        left join ${tableNamePreset} t2 on t1."1" =t2.item_cd and t2.author_cd = #{authorCd}
        union all
        select
        "1" "value","2" "label", '商品分類' "attrType",
        false  as "mandatory",
        case when t2.item_cd is not null then true
        else false end as "flag",'2' as "8",t1."3"
        from ${tableNameKaisou} t1
        left join ${tableNamePreset} t2 on t1."1" =t2.item_cd and t2.author_cd = #{authorCd}
        where "1" not in('jan_cd','jan_name')) a
        order by "8","3"
    </select>
    <select id="getKaiSouName" resultType="java.util.Map">
        select distinct
         <foreach collection="list" item="item" separator=",">
             "${item}"
         </foreach>
         from ${tableName}
        where
    <foreach collection="map" index="index" item="item" separator="and">
        "${index}" = #{item}
    </foreach>
    </select>

    <insert id="insertPresetAttribute">
        insert into ${tableName}
        values
        <foreach collection="presetAttr" separator="," item="item">
            (#{authorCd},#{item})
        </foreach>
    </insert>
    <delete id="deleteByAuthorCd">
        delete from ${tableName} where author_cd=#{authorCd}
    </delete>
    <update id="clearCol">
        update ${janInfoTableName} set "${colName}" = null
    </update>

</mapper>