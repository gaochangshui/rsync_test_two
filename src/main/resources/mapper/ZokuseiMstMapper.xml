<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.trechina.planocycle.mapper.ZokuseiMstMapper">
    <insert id="insertBatch">
        insert into masterdb.planocycle_zokusei_mst values
        <foreach collection="lists" item="item" separator=",">
            (#{companyCd}, #{classCd}, #{item.zokuseiCol}, #{item.zokuseiNm}, #{item.zokuseiSort}, #{item.type},
            #{item.sortType}, #{item.zokuseiCol})
        </foreach>
    </insert>
    <insert id="insertZokuseiData">
        insert into masterdb.planocycle_zokusei_mst_data(zokusei_id,type,nm,company_cd,class_cd,val,val_parent)
        select distinct #{zokuseiId}, 1,COALESCE("${col+1}", ''),#{company},#{classCd},
        COALESCE(
        <foreach collection="list" item="item" separator="|| '_' ||">
            <if test="item &lt;= col">
                "${item}"
            </if>
        </foreach>, ''),
        <trim suffixOverrides=",">
            <foreach collection="list" index="index" item="item" separator="|| '_' ||">
                <if test="index==0 and item == col">null</if>
                <if test="item &lt; col">
                    "${item}"
                </if>
            </foreach>
        </trim>
        from "${company}".prod_${classCd}_jan_info
        on conflict(zokusei_id,company_cd,class_cd,val) do nothing
    </insert>
    <insert id="insertZokuseiData1">
        insert into masterdb.planocycle_zokusei_mst_data(zokusei_id,val,val_parent,type,nm,company_cd,class_cd)
        select distinct #{zokuseiId},COALESCE("${col}", ''),null
                      ,0,COALESCE("${col}", ''),#{company},#{classCd}
        from "${company}".prod_${classCd}_jan_info
    </insert>
    <update id="updateZokuseiMstData">
        update masterdb.planocycle_zokusei_mst_data
        set zokusei_id=
        case zokusei_id
        <foreach collection="map" item="item">
            when #{item.zokusei_id} then #{item.sort}
        </foreach>
        else zokusei_id end
        where company_cd  = #{companyCd} and class_cd = #{classCd}
    </update>
    <update id="updateZokuseiMst">
        update masterdb.planocycle_zokusei_mst
        set zokusei_id=
        case zokusei_id
        <foreach collection="map" item="item">
            when #{item.zokusei_id} then #{item.sort}
        </foreach>
        else zokusei_id end
        where company_cd  = #{companyCd} and class_cd = #{classCd}
    </update>
    <update id="setVal">
        insert into masterdb.planocycle_zokusei_mst_data(
            val,zokusei_id,type,nm,company_cd,class_cd)
        values
            <foreach collection="maps" item="item" index="index" separator="," >
               <choose>
                   <when test="index >= 104">
                       (#{item},${index},0,#{item},'9999','0000')
                   </when>
                   <otherwise>
                       (#{item},#{index} :: integer,0,#{item},#{companyCd},#{classCd})
                   </otherwise>
               </choose>
            </foreach>

        on conflict(zokusei_id,val,company_cd,class_cd)
        do nothing;

    </update>
    <update id="updateZokuseiName">
        update masterdb.planocycle_zokusei_mst set zokusei_nm = #{productItemVO.name}
        where company_cd = '9999' and class_cd = '0000' and zokusei_col = #{zokuseiCol,jdbcType=INTEGER}
    </update>
    <insert id="setValBatch">
        insert into masterdb.planocycle_zokusei_mst_data(
        val,zokusei_id,type,nm,company_cd,class_cd)
        values
        <foreach collection="maps" item="item" separator="," >
               <choose>
                   <when test="item.zokusei_id >=104">
                       (#{item.zokusei_nm},#{item.zokusei_id},0,#{item.zokusei_nm},'9999','0000')
                   </when>
                   <otherwise>
                       (#{item.zokusei_nm},#{item.zokusei_id},0,#{item.zokusei_nm},#{companyCd},#{classCd})
                   </otherwise>
               </choose>
        </foreach>

        on conflict(zokusei_id,val,company_cd,class_cd)
        do nothing;
    </insert>
    <insert id="setItem">
        insert into masterdb.planocycle_zokusei_mst (company_cd,class_cd,zokusei_id,zokusei_nm,zokusei_sort,type,zokusei_col)

        values ('9999','0000',#{maxZokuseiId},#{name},#{itemColName} ::integer,0,#{itemColName} ::integer)
    </insert>
    <select id="selectHeader" resultType="map">
        select "1" as col,"2" as name,"3" sort,0 as "type" from ${tableName}
        where "1" not like 'jan%' and "1" not in ('description','sync','update_time','updater','product_shape')
        order by "4"::integer
    </select>
    <select id="selectAllAttrTable" resultType="string">
        select "table_name" from information_schema.tables
        where table_schema=#{schema} and "table_name" like 'prod_%_jan_attr_header_sys';
    </select>
    <select id="selectAllKaisouTable" resultType="string">
        select "table_name" from information_schema.tables
        where table_schema=#{schema} and "table_name" like 'prod_%_kaisou_header_sys';
    </select>
    <select id="selectExist" resultType="java.lang.Integer">
        select count(1) from "${company}".prod_${classCd}_jan_kaisou_header_sys
        where "3" = cast(#{col} as varchar)
    </select>
    <delete id="delete">
        delete from masterdb.planocycle_zokusei_mst where company_cd=#{companyCd} and class_cd=#{classCd}
    </delete>
    <delete id="deleteData">
        delete from masterdb.planocycle_zokusei_mst_data where company_cd=#{companyCd} and class_cd=#{classCd}
    </delete>
    <delete id="delZokuseiMstForId">
        delete from masterdb.planocycle_zokusei_mst where company_cd='9999' and class_cd='0000' and zokusei_id = #{zokuseiId}
    </delete>
    <delete id="delZokuseiMstDataForId">
        delete from masterdb.planocycle_zokusei_mst_data where company_cd='9999' and class_cd='0000' and zokusei_id = #{zokuseiId}
    </delete>
    <select id="selectByZokuseiId" resultType="com.trechina.planocycle.entity.po.Zokusei">
        select zokusei_id,zokusei_col  from masterdb.planocycle_zokusei_mst where zokusei_id::varchar=any(string_to_array(#{zokuseiId},','))
                                                                              and company_cd=#{companyCd} and class_cd=#{classCd}
    </select>
    <select id="getZokuseiCol" resultType="map">
        select case when "3" is null then zokusei_col :: integer else (zokusei_col :: INTEGER+1) end as zokusei_col
        ,mst.zokusei_id,zokusei_col as cd_col,zokusei_nm
        from masterdb.planocycle_zokusei_mst mst
        left join "${companyCd}".prod_${classCd}_jan_kaisou_header_sys kaisou
        on kaisou."3" = trim(mst.zokusei_col :: VARCHAR)
        where zokusei_id in
            <foreach collection="attrList" item="item" separator="," open="(" close=")">
                #{item}
            </foreach>

         and ((company_cd=#{companyCd} and class_cd=#{classCd}) or (company_cd='9999' and class_cd='0000'))

    </select>
    <select id="getzokuseiName" resultType="java.util.Map">
        select
            zokusei_id,zokusei_nm
        from masterdb.planocycle_zokusei_mst where company_cd = #{companyCd} and class_cd = #{classCd}
        order by zokusei_id
    </select>
    <select id="getZokuseiIdForCol" resultType="java.lang.Integer">
        select zokusei_id
        from masterdb.planocycle_zokusei_mst where company_cd = #{companyCd} and class_cd = #{classCd} and zokusei_col = #{colName}
        order by zokusei_id
    </select>
    <select id="getZokuseiIdAndCol" resultType="java.util.Map">
        select  zokusei_col ,zokusei_nm,zokusei_id from masterdb.planocycle_zokusei_mst where (company_cd = #{companyCd} and class_cd = #{classCd}) or(company_cd = '9999' and class_cd = '0000')
    </select>
    <select id="getJanSizeCol" resultType="java.util.Map">
        select "1" as "colCd","2" as "colName","3" as "infoCol" from "9999".prod_0000_jan_attr_header_sys where "1" in ('plano_width','plano_height','plano_depth')
    </select>
    <select id="getMaxZokuseiId" resultType="java.lang.Integer">
        SELECT MAX(zokusei_id) FROM masterdb.planocycle_zokusei_mst where company_cd = #{companyCd} and class_cd = #{classCd}
    </select>
</mapper>