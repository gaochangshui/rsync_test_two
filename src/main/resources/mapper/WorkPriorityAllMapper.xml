<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.trechina.planocycle.mapper.WorkPriorityAllRestrictMapper">


    <insert id="insertWKTableRestrict">
        INSERT INTO planocycle.work_priority_all_restrict(
        priority_all_cd, company_cd, author_cd, shelf_pattern_cd, restrict_cd, zokusei1, zokusei2, zokusei3, zokusei4, zokusei5, zokusei6, zokusei7, zokusei8, zokusei9, zokusei10, tana_cnt, sku_cnt)
        VALUES
        <foreach collection="allRestrictDtoList" item="list" separator=",">
            (#{list.priorityAllCd, jdbcType=INTEGER}, #{list.companyCd, jdbcType=VARCHAR},
            #{list.authorCd, jdbcType=VARCHAR}, #{list.patternCd, jdbcType=INTEGER},
            #{list.restrictCd, jdbcType=INTEGER}, #{list.zokusei1, jdbcType=VARCHAR},
            #{list.zokusei2, jdbcType=VARCHAR}, #{list.zokusei3, jdbcType=VARCHAR},
            #{list.zokusei4, jdbcType=VARCHAR}, #{list.zokusei5, jdbcType=VARCHAR},
            #{list.zokusei6, jdbcType=VARCHAR}, #{list.zokusei7, jdbcType=VARCHAR},
            #{list.zokusei8, jdbcType=VARCHAR}, #{list.zokusei9, jdbcType=VARCHAR},
            #{list.zokusei10, jdbcType=VARCHAR}, #{list.tanaCnt, jdbcType=INTEGER},
            #{list.skuCnt, jdbcType=INTEGER})
        </foreach>
    </insert>
    <insert id="setBasicPatternResult">
        insert into planocycle.work_all_pattern_restrict_result
        ( priority_all_cd,company_cd,author_cd,shelf_pattern_cd
        ,restrict_cd,sku_cnt,zokusei1
        ,zokusei2,zokusei3,zokusei4
        ,zokusei5,zokusei6,zokusei7
        ,zokusei8,zokusei9,zokusei10
        ,zokusei11,zokusei12,zokusei13
        ,zokusei14,zokusei15,zokusei16
        ,zokusei17,zokusei18,zokusei19
        ,zokusei20,zokusei21,zokusei22
        ,zokusei23,zokusei24,zokusei25
        ,zokusei26,zokusei27,zokusei28
        ,zokusei29,zokusei30,zokusei31
        ,zokusei32,zokusei33)
        values
        <foreach collection="lists" item="item" separator=",">
            (#{item.priorityOrderCd,jdbcType=BIGINT},#{item.companyCd,jdbcType=VARCHAR},#{item.authorCd,jdbcType=VARCHAR}
            ,#{patternCd}
            ,#{item.restrictCd,jdbcType=BIGINT},#{item.skuCnt,jdbcType=BIGINT},#{item.zokusei1,jdbcType=VARCHAR}
            ,#{item.zokusei2,jdbcType=VARCHAR},#{item.zokusei3,jdbcType=VARCHAR},#{item.zokusei4,jdbcType=VARCHAR}
            ,#{item.zokusei5,jdbcType=VARCHAR},#{item.zokusei6,jdbcType=VARCHAR},#{item.zokusei7,jdbcType=VARCHAR}
            ,#{item.zokusei8,jdbcType=VARCHAR},#{item.zokusei9,jdbcType=VARCHAR},#{item.zokusei10,jdbcType=VARCHAR}
            ,#{item.zokusei11,jdbcType=VARCHAR},#{item.zokusei12,jdbcType=VARCHAR},#{item.zokusei13,jdbcType=VARCHAR}
            ,#{item.zokusei14,jdbcType=VARCHAR},#{item.zokusei15,jdbcType=VARCHAR},#{item.zokusei16,jdbcType=VARCHAR}
            ,#{item.zokusei17,jdbcType=VARCHAR},#{item.zokusei18,jdbcType=VARCHAR},#{item.zokusei19,jdbcType=VARCHAR}
            ,#{item.zokusei20,jdbcType=VARCHAR},#{item.zokusei21,jdbcType=VARCHAR},#{item.zokusei22,jdbcType=VARCHAR}
            ,#{item.zokusei23,jdbcType=VARCHAR},#{item.zokusei24,jdbcType=VARCHAR},#{item.zokusei25,jdbcType=VARCHAR}
            ,#{item.zokusei26,jdbcType=VARCHAR},#{item.zokusei27,jdbcType=VARCHAR},#{item.zokusei28,jdbcType=VARCHAR}
            ,#{item.zokusei29,jdbcType=VARCHAR},#{item.zokusei30,jdbcType=VARCHAR},#{item.zokusei31,jdbcType=VARCHAR}
            ,#{item.zokusei32,jdbcType=VARCHAR},#{item.zokusei33,jdbcType=VARCHAR})
        </foreach>

    </insert>
    <delete id="deleteWKTableRestrict">
        delete from planocycle.work_priority_all_restrict
        where company_cd = #{companyCd,jdbcType=VARCHAR}
        and priority_all_cd = #{priorityAllCd}
    </delete>
    <delete id="deleteBasicPatternResult">
        delete from  planocycle.work_all_pattern_restrict_result
        where  priority_all_cd = #{priorityAllCd} and author_cd = #{authorCd} and shelf_pattern_cd = #{patternCd}
    </delete>
    <select id="selectByPriorityAllCd" resultType="map">
        select tai_cd "taiCd",tana_cd "tanaCd",tana_position "tanaPosition",restrict_cd "restrictCd",area "area"
        from planocycle.work_all_pattern_restrict_relation relation where priority_all_cd=#{priorityAllCd} and shelf_pattern_cd=#{patternCd}
        order by tai_cd, tana_cd,tana_position
    </select>
    <select id="selectRestrictResult" resultType="java.util.Map">
        select * from  planocycle.work_all_pattern_restrict_result where author_cd = #{authorCd} and priority_all_cd = #{priorityAllCd}
        and shelf_pattern_cd = #{patternCd}
    </select>
</mapper>