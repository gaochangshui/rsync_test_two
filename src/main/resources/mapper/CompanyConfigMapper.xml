<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.trechina.planocycle.mapper.CompanyConfigMapper">
    <insert id="setCompanyConfig">

    </insert>
    <insert id="setCompany">
    insert into masterdb.company_list (company_cd,company_name)
        values (#{companyCd},#{companyName})
        on conflict("company_cd")
        do update set
        company_cd = #{companyCd},
        company_name= #{companyName}
    </insert>
    <update id="setSyncCompany">
        insert into planocycle.sys_config (item_name,item_value)
        values ('sync_company_list',#{syncCompanyList})
            on conflict("item_name")
        do update set
            item_value = #{syncCompanyList}
    </update>
    <insert id="setGroupCompany">
        insert into masterdb.group_company(group_cd,group_name,company_cd,company_name)
        values (#{groupCd},#{groupName},#{companyCd},#{companyName})
            on conflict(group_cd,company_cd)
        do update set
                        group_cd = #{groupCd},
                       group_name = #{groupName},
                       company_cd = #{companyCd},
                       company_name = #{companyName},
    </insert>
    <select id="getMstkigyocore" resultType="com.trechina.planocycle.entity.po.MstKiGyoCore">
        select * from masterdb.mst_kigyocore where company_cd = #{companyCd}
    </select>
    <select id="getCompanyConfig" resultType="map">
        select jan_name2col_num,jan_item2col_num,kokyaku,intage,maker,basket_price,convert_numbers
        from planocycle.sku_name_config
        where company_cd = #{companyCd} and class = #{classCd}
    </select>
    <select id="getCompanyList" resultType="com.trechina.planocycle.entity.po.Company">
        select
            name."1" as "companyCd",name."2" as "companyName",
            case when groups.company_cd is not null then 'グループ利用'
                 when list.is_use = '0' then '設定待ち'
                 when list.is_use = '1' then '利用中'
                 when list.is_use = '2' then 'グループ利用'
                 else '設定待ち' end as "isUse",list.updater,list.update_time,
            case when name."1" = '1000' then 1 else 2 end as sortFlag
        from
            masterdb.kigyou_name name
                left join masterdb.kigyou_company_sortid sortid
                          on sortid."1" = name."1"
                left join masterdb.company_list list
                          on name."1" = list.company_cd
                left join masterdb.group_company groups
                          on groups.company_cd = name."1"
        order by sortFlag,sortid."3" ::integer
    </select>
    <select id="getGroupList" resultType="com.trechina.planocycle.entity.po.Group">
        select group_cd,group_name,
               array_to_string(array_agg(company_cd),',') "companyCd",
               array_to_string(array_agg(company_name),',') "companyName",
               update_time,updater "authorCd"
        from masterdb.group_company
        group by group_cd,group_name,update_time,updater
    </select>
    <select id="getInUseCompanyList" resultType="com.trechina.planocycle.entity.po.Company">
        select company_cd from planocycle.company_list where is_use='1'
    </select>
    <select id="selectAttrTargetColumn" resultType="map">
        select 
            <foreach collection="targetColumn" item="item" separator=",">${item}</foreach>
        from planocycle.company_attr_config
        <where>
            <foreach collection="condition" index="colName" item="colVal" separator=" and ">
                ${colName}=#{colVal}
            </foreach>
        </where>
    </select>
    <select id="getKokyakuShow" resultType="map">
        select  COALESCE(kokyaku,0) as kokyaku ,COALESCE(basket_price,0) as "basketPrice"
        from planocycle.company_list
        where company_cd = #{companyCd}
    </select>
</mapper>